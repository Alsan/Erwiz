#!/bin/bash

init()
{
	ERWIZ_HOME=$(pwd)
	PACKAGE_HOME=${ERWIZ_HOME}/package
	BUILD_PATH=`readlink -f $0`
	BUILD_PATH=`dirname $BUILD_PATH`
	cd $BUILD_PATH

	# if the last property has not newline it's not read
	#while IFS=$'\r=' read -r key value _; 
	#do 
	#	case $key in 
	#		app.name*) appname=$value;; 
	#		app.version) appversion=$value;; 
	#	esac; 
	#done < ${ERWIZ_HOME}/app_info.properties; 
	#echo "$appname-$appversion"	
	
	app_name="$(sed '/^\#/d' ${ERWIZ_HOME}/app_info.properties | grep 'app.name'  | tail -n 1 | cut -d "=" -f2-)"
	app_version="$(sed '/^\#/d' ${ERWIZ_HOME}/app_info.properties | grep 'app.version'  | tail -n 1 | cut -d "=" -f2-)"
}

clean()
{
	#echo "clean() to be implemented"
	rm -rf ${app_name}*
}

# Meet the guidelines here:
# http://www.debian.org/doc/debian-policy/
package()
{
	#echo "package() to be implemented"
	
	# prepare the directory structure for dpkg-buildpackage 
	cp ../../single/erwiz-0.9.0.tar.gz .
	cp erwiz-0.9.0.tar.gz erwiz_0.9.0.orig.tar.gz
	cp -R ${PACKAGE_HOME}/src ${app_name}-${app_version}
	cp -R template ${app_name}-${app_version}/debian

	# go to the source directory (where debian resides in)
	cd ${app_name}-${app_version}
	
	#fakeroot dh binary-indep
	#debuild -S
	dpkg-buildpackage
	
	# check the package with lintian
	cd ..
	lintian -i -IE --pedantic --show-overrides ${app_name}_${app_version}-*_all.deb
}

post_clean()
{
	#echo "Post-cleaning ..."
	rm -rf ${app_name}-${app_version}
}

init
clean
package
post_clean
